{% extends 'AppBundle:Design:design.html.twig' %}

{% block title %}
    {{ "map"|trans }}
{% endblock %}

{% block content %}
    <div class="container">

        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ url("app_index") }}">{{ "homepage"|trans }}</a></li>
                <li class="breadcrumb-item active" aria-current="page">{{ "map"|trans }}</li>
            </ol>
        </nav>
    </div>

	<div id="mapid" style="min-height: 60vh"></div>
{% endblock %}

{% block js %}
    <script type="application/javascript">
		
        {% if events|length != 1 %}
            var map = L.map('mapid').setView([{{ map_center }}], 11);
        {% else %}
            var map = L.map('mapid').setView([{{ events[0].placeEntity.latitude }}, {{ association.nextEvents[0].placeEntity.longitude }}], 11);
        {% endif %}
    
        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={{ mapbox_access_token }}', {
            maxZoom: 18,
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
            '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
            'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
            id: 'mapbox.streets'
        }).addTo(map);

        // Prevent the zoom when we scroll the webpage
        map.scrollWheelZoom.disable();

        var markers = [];
        var markerClusters = L.markerClusterGroup({
            showCoverageOnHover: false
        });

        {% for event in events %}

    		{% if event.placeEntity is not null %}
                var marker = L.marker([{{ event.placeEntity.latitude }}, {{ event.placeEntity.longitude }}]);
                marker.bindPopup('<a href="{{ url("app_event", {"id": event.id, "name": event.nameForUrl, "source": "association"}) }}"><strong>{{ event.name }}</strong></a><br/><strong>{{ event.startTime|localizeddate("full", "short", locale, time_zone) }}</strong><br/>{{ event.placeEntity.name }}');

                marker.on('mouseover', function (e) {
                    this.openPopup();
                });
                marker.on('mouseout', function (e) {
                    this.closePopup();
                });
                {% if is_mobile() == false %}
                    marker.on('click', function (e) {
                        location.href='{{ url("app_event", {"id": event.id, "name": event.nameForUrl, "source": "association"}) }}'
                    });
                {% endif %}
                
                markers.push([{{ event.placeEntity.latitude }}, {{ event.placeEntity.longitude }}]);
                markerClusters.addLayer(marker);
            {% endif %}
        {% endfor %}

        {% if events|length > 1 %}
            map.fitBounds(markers, { padding: [40, 40] });
        {% endif %}

        map.addLayer(markerClusters);
    </script>
{% endblock %}