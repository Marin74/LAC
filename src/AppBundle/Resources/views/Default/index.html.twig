{% extends "AppBundle:Design:design.html.twig" %}

{% block content %}
    <!-- Main jumbotron for a primary marketing message or call to action -->
    <div class="jumbotron">
        <div class="container">
            <h1>{{ "welcome"|trans }}</h1>
            <p>{{ "website_description"|trans }}</p>
            {% if mainAssociation is not null %}
                <table class="center" style="width: 100%; table-layout: fixed;">
                    <tr>
                        <td><a class="btn btn-primary btn-lg" href="{{ url("app_association", {"id": mainAssociation.id, "name": mainAssociation.nameForUrl}) }}" role="button">{{ "who_are_we"|trans }} &raquo;</a></td>
                        <td><a class="btn btn-primary btn-lg" href="{{ url("app_associations") }}" role="button">{{ "associations"|trans }} &raquo;</a></td>
                        <td><a class="btn btn-primary btn-lg" href="#" role="button">{{ "quizz"|trans }} &raquo;</a></td>
                    </tr>
                </table>
            {% endif %}
        </div>
    </div>

    <div class="container">
        <h1>Prochains évènements</h1>
    </div>

    {% if nextEvents|length == 0 %}
        <div class="container">
            <p>{{ "no_current_events"|trans }}</p>
        </div>
    {% else %}
        <div id="carousel-next_events" class="carousel slide" data-ride="carousel">

            <!-- Wrapper for slides -->
            <div class="carousel-inner" role="listbox">

                {% set index = 0 %}
                {% for event in nextEvents %}

                    {% if index%3 == 0 %}

                        <div class="item {% if index == 0 %}active{% endif %}" >
                        <div class="row">
                    {% endif %}

                    {% include 'AppBundle:Template:event.html.twig' with {'event': event} %}

                    {% if index%3 == 2 or loop.index >= nextEvents|length %}

                        </div>
                        </div>
                    {% endif %}

                    {% set index = index + 1 %}
                {% endfor %}
            </div>
        </div>
    {% endif %}

    <div id="mapid" class="col-md-12 map fit" style="min-width: 310px;"></div>
{% endblock %}

{% block js %}
    <script type="application/javascript">

        {% if nextEvents|length != 1 %}
            var map = L.map('mapid').setView([{{ map_center }}], 11);
        {% else %}
            var map = L.map('mapid').setView([{{ nextEvents[0].latitude }}, {{ nextEvents[0].longitude }}], 11);
        {% endif %}

        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={{ mapbox_access_token }}', {
            maxZoom: 18,
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
            '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
            'Imagery © <a href="http://mapbox.com">Mapbox</a>',
            id: 'mapbox.streets'
        }).addTo(map);

        // Prevent the zoom when we scroll the webpage
        map.scrollWheelZoom.disable();

        var markers = [];

        {% for event in nextEvents %}
            var marker = L.marker([{{ event.latitude }}, {{ event.longitude }}]).addTo(map);
            /*var link = $("<strong>{{ event.name }}</strong>{% if event.place is not empty %}<br/>{{ event.place }}{% elseif event.street is not empty %}<br/>{{ event.street }}{% endif %}{% if event.city is not empty %}<br/>{{ event.city }}{% endif %}").click(function() {

                location.href="{{ url("app_association", {"id": event.association.id, "name": event.association.nameForUrl}) }}";
            })[0];
            marker.bindPopup(link);*/

            marker.bindPopup('<a href="{{ url("app_event", {"id": event.id, "name": event.nameForUrl}) }}"><strong>{{ event.name }}</strong></a>{% if event.place is not empty %}<br/>{{ event.place }}{% elseif event.street is not empty %}<br/>{{ event.street }}{% endif %}{% if event.city is not empty %}<br/>{{ event.city }}{% endif %}');

            markers.push([{{ event.latitude }}, {{ event.longitude }}]);
        {% endfor %}

        {% if nextEvents|length > 1 %}
            map.fitBounds(markers, { padding: [20, 20] });
        {% endif %}
    </script>
{% endblock %}